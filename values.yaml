image:
  repository: itzg/minecraft-server
  tag: latest
  pullPolicy: IfNotPresent
  pullSecret: ""

# Minecraft is not horizontally scalable, adjusting this will most likely break your setup.
# ### WARNING ###
replicaCount: 1

resources:
  requests:
    memory: 512Mi
    cpu: 500m

strategyType: Recreate

nodeSelector: {}

tolerations: []

affinity: {}

securityContext:
  # Security context settings
  runAsUser: 1000
  fsGroup: 2000
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 25
  failureThreshold: 50
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 25
  failureThreshold: 50
  successThreshold: 1
  timeoutSeconds: 1
startupProbe:
  enabled: false
  failureThreshold: 30
  periodSeconds: 10

# initContainers:
#   - name: do-something
#     image: busybox
#     command: ['do', 'something']
#     volumesMounts:
#       - name: nfs
#         mountPath: /mnt/volume
#         readOnly: true
initContainers: []

# sidecarContainers:
#   - name: do-something
#     image: busybox
#     command: ['do', 'something']
#     volumesMounts:
#       - name: nfs
#         mountPath: /mnt/volume
#         readOnly: true
sidecarContainers: []

# extraVolumes:
#   - volumeMounts:
#       - name: nfs
#         mountPath: /mnt/volume
#         readOnly: true
#     volumes:
#       - name: nfs
#         server: some.nfs.server.com
#         path: /
#         mountOptions:
#           - port=2049
#           - hard
#           - vers=4
extraVolumes: []

minecraftServer:
  eula: "TRUE"
  version: "LATEST"
  type: "VANILLA"
  forgeVersion:
  spongeVersion:
  forgeInstallerUrl:
  bukkitDownloadUrl:
  spigotDownloadUrl:
  paperDownloadUrl:
  ftbModpackId:
  ftbModpackVersionId:
  cfServerMod:
  ftbLegacyJavaFixer: false
  difficulty: normal
  whitelist:
  ops:
  icon:
  maxPlayers: 20
  maxWorldSize: 100000
  allowNether: true
  announcePlayerAchievements: true
  enableCommandBlock: true
  forcegameMode: false
  generateStructures: true
  hardcore: false
  maxBuildHeight: 256
  maxTickTime: 60000
  spawnAnimals: true
  spawnMonsters: true
  spawnNPCs: true
  spawnProtection: 16
  viewDistance: 10
  levelSeed:
  gameMode: survival
  motd: "Welcome to MineOps Server!"
  pvp: false
  levelType: DEFAULT
  generatorSettings:
  worldSaveName: world
  downloadWorldUrl:
  forceReDownload: false
  downloadModpackUrl:
  removeOldMods: false
  vanillaTweaksShareCodes: []
  resourcePackUrl:
  resourcePackSha:
  resourcePackEnforce: false
  onlineMode: true
  memory: 1024M
  jvmOpts: ""
  jvmXXOpts: ""
  overrideServerProperties: false
  serviceAnnotations: {}
  serviceType: LoadBalancer
  nodePort:
  servicePort: 25565
  clusterIP:
  loadBalancerIP:
  externalIPs:

  spigetResources: []

  rcon:
    enabled: true
    port: 25575
    password: "CHANGEME!"
    existingSecret:
    secretKey: rcon-password
    serviceType: NodePort
    nodePort:
    clusterIP:
    loadBalancerIP:
    web:
      enabled: true
      image: itzg/rcon
      username: "admin"
      password: "password"
      port: 4326
      websocket: 4327

  monitor:
    enabled: false

  extraPorts:
    []

    # These options allow you to expose another port from the Minecraft server, plugins such
    # as dynmap (8123) and bluemap (8100) will require this for access to their web interfaces
    #
    # - name: map
    #   containerPort: 8123
    #   protocol: TCP
    #   service:
    #     enabled: false
    #     embedded: false
    #     annotations: {}
    #     type: ClusterIP
    #     ## Set the external port if the rcon serviceType is NodePort
    ##     nodePort:
    #     loadBalancerIP: ""
    #     loadBalancerSourceRanges: []
    #     externalTrafficPolicy: Cluster
    #     port: 8123
    #   ingress:
    #     ingressClassName: nginx
    #     enabled: false
    #     annotations:
    ## Deprecated way for specifying the ingressClass. Kube.version < 1.18
    ##       kubernetes.io/ingress.class: nginx
    #       kubernetes.io/tls-acme: "true"
    #     hosts:
    #       - name: map.local
    #         path: /
    #     tls:
    #       - secretName: map-tls
    #         hosts:
    #           - map.local

  query:
    enabled: false
    port: 25565

extraEnv:
  {}
  # some_variable: some value
  # another_variable:
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: status.hostIP

## Additional environment variables to add to the minecraft container from
## ConfigMaps and Secrets
##
envFrom: []

persistence:
  annotations: {}
  storageClass: "ebs-sc"
  dataDir:
    enabled: true
    Size: 1Gi
    # existingClaim: nil
    # subPath: "/path/to/dataDir"

podAnnotations: {}

deploymentAnnotations: {}

serviceAnnotations: {}

rconServiceAnnotations: {}

# PLEASE NOTE! rcon must be enabled above!  It does NOT require a nodePort or loadBalancerIP
mcbackup:
  enabled: false

  image:
    repository: itzg/mc-backup
    tag: latest
    pullPolicy: IfNotPresent

  #  wait 2 minutes before starting
  initialDelay: 2m

  # ***set to 0 or smaller, script will run once and exit.  DO NOT SET TO 0 or smaller, this will cause K8s to kill your pod!***
  # backupInterval="1.5d" -> backup every one and a half days (36 hours)
  # backupInterval="2h 30m" -> backup every two and a half hours
  backupInterval: 24h

  # option lets you pause backups if no players are online.
  pauseIfNoPlayers: "false"

  # is set to a positive number, it'll delete old .tgz backup files from DEST_DIR. By default deletes backups older than a week.
  pruneBackupsDays: 7

  # Set to a negative value to retry indefinitely
  rconRetries: 5
  rconRetryInterval: 10s

  # is a comma-separated list of glob(3) patterns to exclude from backups. By default excludes all jar files (plugins, server files),
  # logs folder and cache (used by i.e. PaperMC server).
  excludes: "*.jar,cache,logs"

  # backup methods, see https://github.com/itzg/docker-mc-backup e.g. tar, rclone, restic
  backupMethod: tar
  # tar and rclone methods
  destDir: /backups
  # is a true/false flag that creates a symbolic link to the latest backup
  linkLatest: "false"
  # is the compression method used by tar. Valid value: gzip bzip2 zstd
  compressMethod: "gzip"
  # sets the parameters for zstd compression. The --long parameter affects RAM requirements for both compression and decompression
  # (the default of 25 means 2^25 bytes = 32 MB).
  zstdParameters: "-3 --long=25 --single-thread"
  # the name of the remote you've configured in your rclone.conf
  rcloneRemote:
  rcloneDestDir:
  rcloneCompressMethod: gzip

  # see https://rclone.org/ for details
  # this value is evaluated as a template
  rcloneConfig:
  # [remote]
  # type = google cloud storage
  # client_id =
  # client_secret =
  # token = {"AccessToken":"super","RefreshToken":"secret","Expiry":"date","Extra":null}
  # project_number = 12345678
  # object_acl = private
  # bucket_acl = private

  # if you prefer to create a secret from file (e.g. kubectl create secret generic my-rclone-config --from-file=~/.config/rclone/rclone.conf)
  # rcloneConfigExistingSecret: my-rclone-config

  resticRepository:
  # variable to define a space separated list of additional restic tags. see https://hub.docker.com/r/itzg/mc-backup
  resticAdditionalTags: "mc_backups"
  # see https://restic.readthedocs.io/en/latest/060_forget.html
  pruneResticRetention: "--keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75"

  # At least one of RESTIC_PASSWORD* env variables need to be defined, see https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html
  resticEnvs:
    []
    # RESTIC_PASSWORD: restic-password

  extraEnvs:
    []
    # Can be set to the timezone to use for logging
    # tz:

  resources:
    requests:
      memory: 512Mi
      cpu: 500m

  persistence:
    annotations: {}
    backupDir:
      # Set this to false if you don't care to persist state between restarts.
      enabled: false
      # existingClaim: nil
      Size: 1Gi
